<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kxjl.tasktransferplat.dao.plus.LockCompanyStatisticsMapper">

    <select id="selectMouthList" resultType="com.kxjl.tasktransferplat.pojo.LockCMStistics"
            parameterType="com.kxjl.tasktransferplat.pojo.LockCMStistics">

        select t.Id,t.EnterpriseName as enterpriseName,COUNT(o.Id) as orderCount,sum(o.SellerTotalPrice) as
        totalReceivable,sum(o.LockerTotalPrice) as totalPayable,
        (sum(o.SellerTotalPrice)-sum(o.LockerTotalPrice)) as totalPriceDifference,date_format( o.CreateTime,'%Y-%m') as creatTime
        from t_locksmith_enterprise t
        left join t_orderinfo o on o.SellerId = t.Id
        where 1=1 and o.DataState = 1
        <if test=" id!=null and id!='' ">
            and t.Id= #{id,jdbcType=VARCHAR}
        </if>
        <if test=" creatTime!=null and creatTime!='' ">
            and date_format( o.CreateTime,'%Y-%m') =#{creatTime}
        </if>

       group by t.Id,t.EnterpriseName,date_format( o.CreateTime,'%Y-%m')

    </select>

    <select id="selectOrderList" resultType="com.kxjl.tasktransferplat.pojo.LockCMStistics"
            parameterType="com.kxjl.tasktransferplat.pojo.LockCMStistics">

        select t.Id,t.EnterpriseName as enterpriseName,COUNT(o.Id) as orderCount,sum(o.SellerTotalPrice) as
        totalReceivable,sum(o.LockerTotalPrice) as totalPayable,
        (sum(o.SellerTotalPrice)-sum(o.LockerTotalPrice)) as totalPriceDifference,o.CreateTime as creatTime
        from t_locksmith_enterprise t
        left join t_orderinfo o on o.SellerId = t.Id
        where 1=1 and  o.DataState = 1
        <if test=" id!=null and id!='' ">
            and t.Id= #{id,jdbcType=VARCHAR}
        </if>
        <if test=" creatTime!=null and creatTime!='' ">
            and date_format( o.CreateTime,'%Y-%m') =#{creatTime}
        </if>

        group by t.Id,o.CreateTime

    </select>


    <select id="selectYearList" resultType="com.kxjl.tasktransferplat.pojo.MouthOrderStatistics"
            parameterType="com.kxjl.tasktransferplat.pojo.LockCMStistics">

        select t.Id, t.EnterpriseName,COUNT(o.Id) as totalCount,
        sum(case when date_format(o.CreateTime,'%m') = '01' then 1 else 0 end) 'Jan',
        sum(case when date_format(o.CreateTime,'%m') = '02' then 1 else 0 end) 'Feb',
        sum(case when date_format(o.CreateTime,'%m') = '03' then 1 else 0 end) 'Mar',
        sum(case when date_format(o.CreateTime,'%m') = '04' then 1 else 0 end) 'Apr',
        sum(case when date_format(o.CreateTime,'%m') = '05' then 1 else 0 end) 'May',
        sum(case when date_format(o.CreateTime,'%m') = '06' then 1 else 0 end) 'Jun',
        sum(case when date_format(o.CreateTime,'%m') = '07' then 1 else 0 end) 'Jul',
        sum(case when date_format(o.CreateTime,'%m') = '08' then 1 else 0 end) 'Aug',
        sum(case when date_format(o.CreateTime,'%m') = '09' then 1 else 0 end) 'Sept',
        sum(case when date_format(o.CreateTime,'%m') = '10' then 1 else 0 end) 'Oct',
        sum(case when date_format(o.CreateTime,'%m') = '11' then 1 else 0 end) 'Nov',
        sum(case when date_format(o.CreateTime,'%m') = '12' then 1 else 0 end) 'Dec'
        from t_orderinfo o
        left join t_locksmith_enterprise t on t.Id = o.SellerId

        where 1=1  and o.DataState = 1

        <if test=" id!=null and id!='' ">
            and t.Id= #{id,jdbcType=VARCHAR}
        </if>
        <if test=" creatTime!=null and creatTime!='' ">
            and date_format( o.CreateTime,'%Y') =#{creatTime}
        </if>

        group by t.Id

    </select>

    <select id="selectProvinceList" resultType="com.kxjl.tasktransferplat.pojo.LockCPStatistics"
            parameterType="com.kxjl.tasktransferplat.pojo.LockCMStistics">

        select e.Id, e.EnterpriseName,
        sum(case when t.ProvinceCode = '11' then 1 else 0 end) 'BJ',sum(case when t.ProvinceCode = '12' then 1 else 0 end) 'TJ',
        sum(case when t.ProvinceCode = '13' then 1 else 0 end) 'HB',sum(case when t.ProvinceCode = '14' then 1 else 0 end) 'SX',
        sum(case when t.ProvinceCode = '15' then 1 else 0 end) 'NMG',sum(case when t.ProvinceCode = '21' then 1 else 0 end) 'LN',
        sum(case when t.ProvinceCode = '22' then 1 else 0 end) 'JL',sum(case when t.ProvinceCode = '23' then 1 else 0 end) 'HLJ',
        sum(case when t.ProvinceCode = '31' then 1 else 0 end) 'SH',sum(case when t.ProvinceCode = '32' then 1 else 0 end) 'JS',
        sum(case when t.ProvinceCode = '33' then 1 else 0 end) 'ZJ',sum(case when t.ProvinceCode = '34' then 1 else 0 end) 'AH',
        sum(case when t.ProvinceCode = '35' then 1 else 0 end) 'FJ',sum(case when t.ProvinceCode = '36' then 1 else 0 end) 'JX',
        sum(case when t.ProvinceCode = '37' then 1 else 0 end) 'SD',sum(case when t.ProvinceCode = '41' then 1 else 0 end) 'HN',
        sum(case when t.ProvinceCode = '42' then 1 else 0 end) 'HUB',sum(case when t.ProvinceCode = '43' then 1 else 0 end) 'HUN',
        sum(case when t.ProvinceCode = '44' then 1 else 0 end) 'GD',sum(case when t.ProvinceCode = '45' then 1 else 0 end) 'GX',
        sum(case when t.ProvinceCode = '46' then 1 else 0 end) 'HAIN',sum(case when t.ProvinceCode = '50' then 1 else 0 end) 'CQ',
        sum(case when t.ProvinceCode = '51' then 1 else 0 end) 'SC'	,sum(case when t.ProvinceCode = '52' then 1 else 0 end) 'GZ',
        sum(case when t.ProvinceCode = '53' then 1 else 0 end) 'YN'	,sum(case when t.ProvinceCode = '54' then 1 else 0 end) 'XZ',
        sum(case when t.ProvinceCode = '61' then 1 else 0 end) 'SANX'	,sum(case when t.ProvinceCode = '62' then 1 else 0 end) 'GS',
        sum(case when t.ProvinceCode = '63' then 1 else 0 end) 'QH'	,sum(case when t.ProvinceCode = '64' then 1 else 0 end) 'NX',
        sum(case when t.ProvinceCode = '65' then 1 else 0 end) 'XJ'
        from t_orderinfo o
        left join t_area_province t on t.ProvinceCode	= left(o.AreaCode,2)
        left join t_locksmith_enterprise e on e.Id = o.SellerId

        where 1=1  and o.DataState = 1

        <if test=" id!=null and id!='' ">
            and e.Id= #{id,jdbcType=VARCHAR}
        </if>
        <if test=" creatTime!=null and creatTime!='' ">
            and date_format( o.CreateTime,'%Y') =#{creatTime}
        </if>

        group by e.Id

    </select>

    <select id="selectTurnoverList" resultType="com.kxjl.tasktransferplat.pojo.LockCPStatistics"
            parameterType="com.kxjl.tasktransferplat.pojo.LockCMStistics">

        select tempTable.Id, tempTable.EnterpriseName,

        sum(tempTable.BJA-tempTable.BJD+tempTable.TJA-tempTable.TJD+tempTable.HBA-tempTable.HBD +tempTable.SXA-tempTable.SXD +
        tempTable.NMGA-tempTable.NMGD +tempTable.LNA-tempTable.LND+tempTable.JLA-tempTable.JLD+tempTable.HLJA-tempTable.HLJD+
        tempTable.SHA-tempTable.SHD +tempTable.JSA-tempTable.JSD+tempTable.ZJA-tempTable.ZJD+tempTable.AHA-tempTable.AHD +
        tempTable.FJA-tempTable.FJD+tempTable.JXA-tempTable.JXD+tempTable.SDA-tempTable.SDD+tempTable.HNA-tempTable.HND+
        tempTable.HUBA-tempTable.HUBD+tempTable.HUNA-tempTable.HUND+tempTable.GDA-tempTable.GDD+tempTable.GXA-tempTable.GXD+
        +tempTable.HAINA-tempTable.HAIND+tempTable.CQA-tempTable.CQD+tempTable.SCA-tempTable.SCD+tempTable.GZA-tempTable.GZD+
        tempTable.YNA-tempTable.YND+tempTable.XZA-tempTable.XZD+tempTable.SANXA-tempTable.SANXD+tempTable.GSA-tempTable.GSD+
        tempTable.QHA-tempTable.QHD+tempTable.NXA-tempTable.NXD+tempTable.XJA-tempTable.XJD) as turnover,

        sum(tempTable.BJA+tempTable.TJA+tempTable.HBA+tempTable.SXA+tempTable.NMGA+tempTable.LNA+tempTable.JLA+tempTable.HLJA+tempTable.SHA+tempTable.JSA+
        tempTable.ZJA+tempTable.AHA+tempTable.FJA+tempTable.JXA+tempTable.SDA+tempTable.HNA+tempTable.HUBA+tempTable.HUNA+tempTable.GDA+tempTable.GXA+
        tempTable.HAINA+tempTable.CQA+tempTable.SCA+tempTable.GZA+tempTable.YNA+tempTable.XZA+tempTable.SANXA+tempTable.GSA+tempTable.QHA+tempTable.NXA+tempTable.XJA) as income ,

        sum(tempTable.BJD+tempTable.TJD+tempTable.HBD+tempTable.SXD+tempTable.NMGD+tempTable.LND+tempTable.JLD+tempTable.HLJD+tempTable.SHD+tempTable.JSD+
        tempTable.ZJD+tempTable.AHD+tempTable.FJD+tempTable.JXD+tempTable.SDD+tempTable.HND+tempTable.HUBD+tempTable.HUND+tempTable.GDD+tempTable.GXD+
        tempTable.HAIND+tempTable.CQD+tempTable.SCD+tempTable.GZD+tempTable.YND+tempTable.XZD+tempTable.SANXD+tempTable.GSD+tempTable.QHD+tempTable.NXD+tempTable.XJD) as expenses ,

        (tempTable.BJA-tempTable.BJD ) as BJ,(tempTable.TJA-tempTable.TJD ) as TJ,(tempTable.HBA-tempTable.HBD ) as HB,(tempTable.SXA-tempTable.SXD ) as SX,
        (tempTable.NMGA-tempTable.NMGD ) as NMG,(tempTable.LNA-tempTable.LND ) as LN,(tempTable.JLA-tempTable.JLD ) as JL,(tempTable.HLJA-tempTable.HLJD ) as HLJ,
        (tempTable.SHA-tempTable.SHD ) as SH,(tempTable.JSA-tempTable.JSD ) as JS,(tempTable.ZJA-tempTable.ZJD ) as ZJ,(tempTable.AHA-tempTable.AHD ) as AH,
        (tempTable.FJA-tempTable.FJD ) as FJ,(tempTable.JXA-tempTable.JXD ) as JX,(tempTable.SDA-tempTable.SDD ) as SD,(tempTable.HNA-tempTable.HND ) as HN,
        (tempTable.HUBA-tempTable.HUBD ) as HUB,(tempTable.HUNA-tempTable.HUND ) as HUN,(tempTable.GDA-tempTable.GDD ) as GD,(tempTable.GXA-tempTable.GXD ) as GX,
        (tempTable.HAINA-tempTable.HAIND ) as HAIN,(tempTable.CQA-tempTable.CQD ) as CQ,(tempTable.SCA-tempTable.SCD ) as SC,(tempTable.GZA-tempTable.GZD ) as GZ,
        (tempTable.YNA-tempTable.YND ) as YN,(tempTable.XZA-tempTable.XZD ) as XZ,(tempTable.SANXA-tempTable.SANXD ) as SANX,(tempTable.GSA-tempTable.GSD ) as GS,
        (tempTable.QHA-tempTable.QHD ) as QH,(tempTable.NXA-tempTable.NXD ) as NX,(tempTable.XJA-tempTable.XJD ) as XJ
        from (
        select e.Id, e.EnterpriseName,

        sum(case when t.ProvinceCode = '11' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'BJA',
        sum(case when t.ProvinceCode = '12' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'TJA',
        sum(case when t.ProvinceCode = '13' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'HBA',
        sum(case when t.ProvinceCode = '14' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'SXA',
        sum(case when t.ProvinceCode = '15' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'NMGA',
        sum(case when t.ProvinceCode = '21' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'LNA',
        sum(case when t.ProvinceCode = '22' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'JLA',
        sum(case when t.ProvinceCode = '23' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'HLJA',
        sum(case when t.ProvinceCode = '31' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'SHA',
        sum(case when t.ProvinceCode = '32' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'JSA',
        sum(case when t.ProvinceCode = '33' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'ZJA',
        sum(case when t.ProvinceCode = '34' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'AHA',
        sum(case when t.ProvinceCode = '35' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'FJA',
        sum(case when t.ProvinceCode = '36' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'JXA',
        sum(case when t.ProvinceCode = '37' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'SDA',
        sum(case when t.ProvinceCode = '41' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'HNA',
        sum(case when t.ProvinceCode = '42' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'HUBA',
        sum(case when t.ProvinceCode = '43' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'HUNA',
        sum(case when t.ProvinceCode = '44' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'GDA',
        sum(case when t.ProvinceCode = '45' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'GXA',
        sum(case when t.ProvinceCode = '46' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'HAINA',
        sum(case when t.ProvinceCode = '50' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'CQA',
        sum(case when t.ProvinceCode = '51' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'SCA'	,
        sum(case when t.ProvinceCode = '52' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'GZA',
        sum(case when t.ProvinceCode = '53' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'YNA'	,
        sum(case when t.ProvinceCode = '54' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'XZA',
        sum(case when t.ProvinceCode = '61' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'SANXA'	,
        sum(case when t.ProvinceCode = '62' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'GSA'	,
        sum(case when t.ProvinceCode = '63' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'QHA'	,
        sum(case when t.ProvinceCode = '64' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'NXA',
        sum(case when t.ProvinceCode = '65' then (case when o.FinishedState = '1' then o.SellerTotalPrice else 0 end) else 0 end) as'XJA',

        sum(case when t.ProvinceCode = '11' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'BJD',
        sum(case when t.ProvinceCode = '12' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'TJD',
        sum(case when t.ProvinceCode = '13' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'HBD',
        sum(case when t.ProvinceCode = '14' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'SXD',
        sum(case when t.ProvinceCode = '15' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'NMGD',
        sum(case when t.ProvinceCode = '21' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'LND',
        sum(case when t.ProvinceCode = '22' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'JLD',
        sum(case when t.ProvinceCode = '23' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'HLJD',
        sum(case when t.ProvinceCode = '31' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'SHD',
        sum(case when t.ProvinceCode = '32' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'JSD',
        sum(case when t.ProvinceCode = '33' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'ZJD',
        sum(case when t.ProvinceCode = '34' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'AHD',
        sum(case when t.ProvinceCode = '35' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'FJD',
        sum(case when t.ProvinceCode = '36' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'JXD',
        sum(case when t.ProvinceCode = '37' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'SDD',
        sum(case when t.ProvinceCode = '41' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'HND',
        sum(case when t.ProvinceCode = '42' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'HUBD',
        sum(case when t.ProvinceCode = '43' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'HUND',
        sum(case when t.ProvinceCode = '44' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'GDD',
        sum(case when t.ProvinceCode = '45' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'GXD',
        sum(case when t.ProvinceCode = '46' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'HAIND',
        sum(case when t.ProvinceCode = '50' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'CQD',
        sum(case when t.ProvinceCode = '51' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'SCD'	,
        sum(case when t.ProvinceCode = '52' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'GZD',
        sum(case when t.ProvinceCode = '53' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'YND'	,
        sum(case when t.ProvinceCode = '54' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'XZD',
        sum(case when t.ProvinceCode = '61' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'SANXD'	,
        sum(case when t.ProvinceCode = '62' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'GSD',
        sum(case when t.ProvinceCode = '63' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'QHD'	,
        sum(case when t.ProvinceCode = '64' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'NXD',
        sum(case when t.ProvinceCode = '65' then (case when d.DepositStatus = '3' then d.DepositMoney else 0 end) else 0 end) as'XJD'

        from t_orderinfo o
        left join t_area_province t on t.ProvinceCode	= left(o.AreaCode,2)
        left join t_locksmith_enterprise e on e.Id = o.SellerId
        left join t_user_deposit d on d.OrderInfoId = o.Id

        where 1=1

--         and  <![CDATA[(o.orderState >= 501 AND o.orderState < 599)]]>

        and o.DataState = 1

        <if test=" id!=null and id!='' ">
            and e.Id= #{id,jdbcType=VARCHAR}
        </if>
        <if test=" creatTime!=null and creatTime!='' ">
            and date_format( o.CreateTime,'%Y') =#{creatTime}
        </if>

        group by e.Id

        ) as tempTable group by tempTable.Id


    </select>

</mapper>
