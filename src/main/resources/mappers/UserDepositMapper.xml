<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kxjl.tasktransferplat.dao.plus.UserDepositMapper">

   <sql id="columns">
       deposit.id, deposit.userId, deposit.depositType, deposit.depositNumber,
       deposit.depositMoney, deposit.bankId, deposit.bankName, deposit.depositReceiver,
       deposit.depositReceiverPhone, deposit.depositIp, deposit.depositStatus,
       deposit.createTime, deposit.updateTime, deposit.auditor, deposit.auditOpinion,
       deposit.failCause,deposit.orderInfoId
   </sql>
    <insert id="insertBatch">
        INSERT INTO t_orderinfo (Id, UserId, DepositStatus, OrderInfoId)
        VALUES
        <foreach collection="list" item="userDeposit" separator=",">
            (#{userDeposit.id,jdbcType=INTEGER}, #{userDeposit.projectId,jdbcType=VARCHAR},
            #{userDeposit.depositStatus,jdbcType=INTEGER},
            #{userDeposit.orderInfoId,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <select id="depositList" resultType="com.kxjl.tasktransferplat.pojo.UserDeposit">
        SELECT
        deposit.*, o.orderNo,userinfo.Name userName,userinfo.Phone lockerPhone, o.DoneTime startdoneTime
        FROM t_user_deposit deposit
        left JOIN t_userinfo userinfo ON deposit.UserId = userinfo.Id
        left join t_orderinfo o on deposit.orderInfoId=o.id
        WHERE 1 = 1
        
          <if test="id != null and id !='' ">
            AND deposit.id=#{id}
        </if>
        
        <if test="userId != null and userId !='' ">
            AND deposit.userid=#{userId}
        </if>
        <if test="userName != null and userName != ''">
            AND userinfo.Name LIKE concat("%", #{userName}, "%")
        </if>
        <if test="lockerPhone != null and lockerPhone != ''">
            AND userinfo.Phone LIKE concat("%", #{lockerPhone}, "%")
        </if>
          <if test="orderInfoId != null and orderInfoId !='' ">
            AND deposit.orderInfoId=#{orderInfoId}
        </if>
        
        
      <!--   <if test=" startTime !=null and startTime !='' ">
            <![CDATA[and deposit.CreateTime >= #{startTime}]]>
        </if>
        <if test=" endTime !=null and endTime !='' ">
            <![CDATA[and deposit.CreateTime <= #{endTime}]]>
        </if> -->
        
        
        <if test=" startTime !=null and startTime !='' ">
            <![CDATA[and o.DoneTime >= #{startTime}]]>
        </if>
        <if test=" endTime !=null and endTime !='' ">
            <![CDATA[and o.DoneTime <= #{endTime}]]>
        </if>
        
        
        <if test=" depositStatus !=null">
            and deposit.DepositStatus =${depositStatus,jdbcType=INTEGER}
        </if>
          <if test=" depositStatusQuery !=null and depositStatusQuery !='' ">
            and deposit.DepositStatus in (${depositStatusQuery})
        </if>
        
        order by deposit.DepositStatus
        
    </select>

    <select id="depositListByOrder" resultType="java.util.Map">
        SELECT
        orderinfo.*,deposit.DepositStatus,deposit.DepositMoney,date_format(deposit.CreateTime,'%Y-%m-%d %H:%i:%s') applyTime,deposit.billId,userinfo.Name lockName,
        CONCAT(province.ProvinceName,' ',city.CityName,' ',district.DistrictName) custAddress
        FROM t_user_deposit deposit
        JOIN t_userinfo userinfo ON deposit.UserId = userinfo.Id
        JOIN t_orderinfo orderinfo ON deposit.OrderInfoId = orderinfo.Id
        left join t_area_district district on orderinfo.DistrictId=district.id
        left join t_area_city city on district.CityId=city.id
        left join t_area_province province on city.ProvinceId=province.id
        WHERE 1 = 1
        AND deposit.UserId = #{userId,jdbcType=BIGINT}
        ORDER BY deposit.CreateTime DESC 
    </select>
    
    <update id="updateDepositMoneyByOrder" parameterType="com.kxjl.tasktransferplat.pojo.UserDeposit" >
    update t_user_deposit set DepositMoney=#{depositMoney} where OrderInfoId=#{orderInfoId}
    </update>

    <update id="updateUserDepositStatus" parameterType="com.kxjl.tasktransferplat.pojo.UserDeposit" >
        update t_user_deposit set DepositStatus=#{depositStatus},Auditor=#{auditor} where Id=#{id}
    </update>

    <select id="selectUserDepositByOrderNo" resultType="com.kxjl.tasktransferplat.pojo.UserDeposit">
        SELECT
        deposit.*
        FROM t_user_deposit deposit
        left join t_orderinfo orderinfo on deposit.orderInfoId=orderinfo.id
        WHERE 1 = 1 AND orderinfo.OrderNo = #{orderNo}
    </select>

    <select id="userDepositExcel" resultType="java.util.Map">
        SELECT
        orderinfo.Id id,orderinfo.OrderNo orderNo,orderinfo.ServerType serverType,userinfo.Name userName,orderinfo.lockNum num,
        locksmith.EnterpriseName enterpriseName,
        date_format(orderinfo.CreateTime,'%Y-%m-%d %H:%i:%s') createTime,
        date_format(orderinfo.DoneTime,'%Y-%m-%d %H:%i:%s') doneTime,orderinfo.CustomerName customerName,
        orderinfo.CustomerPhone customerPhone,
        CONCAT(province.ProvinceName,' ',city.CityName,' ',district.DistrictName) custAddress,
        orderinfo.LockerTotalPrice lockerTotalPrice,moneyDetail.*
        FROM t_user_deposit userdeposit
        LEFT JOIN t_orderinfo orderinfo ON userdeposit.OrderInfoId = orderinfo.Id
        left join t_area_district district on orderinfo.DistrictId=district.id
        left join t_area_city city on district.CityId=city.id
        left join t_area_province province on city.ProvinceId=province.id
        LEFT JOIN t_locksmith_enterprise locksmith on orderinfo.SellerId=locksmith.Id
        LEFT JOIN t_userinfo userinfo ON userdeposit.UserId = userinfo.Id
        LEFT JOIN
        (SELECT OrderinfoId,
        SUM(CASE ReasonType WHEN '10' THEN ChangeValueLocker ELSE NULL END) 'build',
        SUM(CASE ReasonType WHEN '11' THEN ChangeValueLocker ELSE NULL END) 'repair',
        SUM(CASE ReasonType WHEN '12' THEN ChangeValueLocker ELSE NULL END) 'openLock',
        SUM(CASE ReasonType WHEN '14' THEN ChangeValueLocker ELSE NULL END) 'measure',
        SUM(CASE ReasonType WHEN '15' THEN ChangeValueLocker ELSE NULL END) 'catInstall',
        SUM(CASE ReasonType WHEN '16' THEN ChangeValueLocker ELSE NULL END) 'changeLock',
        SUM(CASE ReasonType WHEN '17' THEN ChangeValueLocker ELSE NULL END) 'projectBuild',
        SUM(CASE ReasonType WHEN '18' THEN ChangeValueLocker ELSE NULL END) 'projectRepair',
        SUM(CASE ReasonType WHEN '119' THEN ChangeValueLocker ELSE NULL END) 'projectOther',
        SUM(CASE ReasonType WHEN '19' THEN ChangeValueLocker ELSE NULL END) 'buildOther',

        SUM(CASE ReasonType WHEN '21' THEN ChangeValueLocker ELSE NULL END) 'runEmpty',
        SUM(CASE ReasonType WHEN '22' THEN ChangeValueLocker ELSE NULL END) 'longDistance',
        SUM(CASE ReasonType WHEN '23' THEN ChangeValueLocker ELSE NULL END) 'changeBuild',
        SUM(CASE ReasonType WHEN '24' THEN ChangeValueLocker ELSE NULL END) 'specialDoor',
        SUM(CASE ReasonType WHEN '25' THEN ChangeValueLocker ELSE NULL END) 'hurry',
        SUM(CASE ReasonType WHEN '26' THEN ChangeValueLocker ELSE NULL END) 'prelock'

        FROM t_orderinfo_attach_money_detail
        GROUP BY OrderinfoId) moneyDetail ON orderinfo.Id = moneyDetail.OrderinfoId
        where 1=1 and orderinfo.DataState=1
        <if test=" userId !=null and userId !='' ">
            and userdeposit.UserId = #{userId}
        </if>
        <if test=" userName !=null and userName !='' ">
            and userinfo.Name LIKE concat ('%',#{userName},'%')
        </if>
        <if test=" lockerPhone !=null and lockerPhone !='' ">
            and userinfo.Phone LIKE concat ('%',#{lockerPhone},'%')
        </if>
        <if test=" depositStatus !=null ">
            and userdeposit.DepositStatus = #{depositStatus,jdbcType=INTEGER}
        </if>
        <if test=" startTime !=null and startTime !='' ">
            <![CDATA[and userdeposit.CreateTime >= #{startTime}]]>
        </if>
        <if test=" endTime !=null and endTime !='' ">
            <![CDATA[and userdeposit.CreateTime <= #{endTime}]]>
        </if>
            <if test=" depositStatusQuery !=null and depositStatusQuery !='' ">
            and userdeposit.DepositStatus in (${depositStatusQuery})
        </if>
        
        order by userinfo.id
    </select>

</mapper>
